apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: prometheus
    namespace: prometheus
spec:
    interval: 15m
    chart:
        spec:
            chart: prometheus
            version: 18.3.0
            sourceRef:
                kind: HelmRepository
                name: truecharts
                namespace: flux-system
    releaseName: prometheus
    values:
        alertmanager:
            config:
                global:
                    resolve_timeout: 5m
                receivers:
                    - name: "null"
                route:
                    group_by:
                        - job
                    group_interval: 5m
                    group_wait: 30s
                    receiver: "null"
                    repeat_interval: 12h
                    routes:
                        - match:
                            alertname: Watchdog
                          receiver: "null"
            containerSecurityContext:
                allowPrivilegeEscalation: false
                capabilities:
                    drop:
                        - ALL
                enabled: true
                readOnlyRootFilesystem: false
                runAsNonRoot: true
            enabled: true
            externalConfig: false
            externalUrl: ""
            listenLocal: false
            livenessProbe:
                enabled: true
                failureThreshold: 120
                initialDelaySeconds: 0
                path: /-/healthy
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 3
            logFormat: logfmt
            logLevel: info
            nodeAffinityPreset:
                key: ""
                type: ""
            paused: false
            persistence:
                accessModes:
                    - ReadWriteOnce
                enabled: true
                size: 999Gi
                storageClass: ""
            podAffinityPreset: ""
            podAntiAffinityPreset: soft
            podDisruptionBudget:
                enabled: false
                maxUnavailable: ""
                minAvailable: 1
            podMetadata: {}
            podSecurityContext:
                enabled: true
                fsGroup: 1001
                runAsUser: 1001
            portName: alertmanager
            priorityClassName: ""
            readinessProbe:
                enabled: true
                failureThreshold: 120
                initialDelaySeconds: 0
                path: /-/ready
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 3
            replicaCount: 1
            retention: 240h
            routePrefix: /
            serviceAccount:
                create: true
                name: ""
            serviceMonitor:
                enabled: true
                interval: ""
        alertmanagerImage:
            repository: bitnami/alertmanager
            tag: 0.27.0@sha256:fa86a659f22a216b8cc8452aeb10f722e7cc8d1b549744b173eb48d819359349
        configmap:
            grafana-datasource:
                data:
                    datasource.yaml: |-
                        apiVersion: 1
                        datasources:
                        - name: Prometheus
                          type: prometheus
                          uid: {{ .Values.grafana.datasource.uid | default "prometheus" }}
                          url: http://{{ include "tc.v1.common.lib.chart.names.fullname" $ }}.{{ include "tc.v1.common.lib.metadata.namespace" (dict "rootCtx" $ "objectData" . "caller" "Configmap") }}:{{ .Values.service.main.ports.main.port }}
                          access: proxy
                          isDefault: {{ .Values.grafana.datasource.default | default true }}
                          jsonData:
                            httpMethod: {{ .Values.grafana.datasource.httpMethod | default "POST" }}
                            timeInterval: {{ .Values.grafana.datasource.scrapeInterval | default "30s" }}
                            {{- if .Values.grafana.datasource.timeout }}
                            timeout: {{ .Values.grafana.datasource.timeout }}
                            {{- end }}
                enabled: '{{ if .Values.grafana.datasource.enabled }}true{{ else }}false{{ end }}'
                labels:
                    grafana_datasources: "1"
        env:
            PROMETHEUS_CONFIG_RELOADER:
                configMapKeyRef:
                    key: prometheus-config-reloader
                    name: prometheus-operator-config
        exporters:
            kube-state-metrics:
                enabled: true
            node-exporter:
                enabled: true
        grafana:
            datasource:
                default: true
                enabled: true
                httpMethod: POST
                scrapeInterval: 30s
                uid: prometheus
        ingress:
            alertmanager:
                enabled: false
            main:
                enabled: true
                hosts:
                    - host: metrics.${DOMAIN_0}
                      paths:
                        - path: /
                          pathType: Prefix
                ingressClassName: ""
                integrations:
                    certManager:
                        certificateIssuer: domain-0-le-prod
                        enabled: true
                    homepage:
                        description: ""
                        enabled: true
                        group: Utilities
                        icon: ""
                        name: ""
                        widget:
                            custom:
                                key: ""
                            enabled: false
                    traefik:
                        allowCors: false
                        enabled: true
                        entrypoints:
                            - websecure
                        middlewares:
                            - name: auth
                              namespace: "traefik"
            thanos:
                enabled: false
        kps:
            alertmanager:
                enabled: false
            coreDns:
                enabled: true
            crds:
                enabled: false
            defaultRules:
                create: true
            global:
                rbac:
                    create: true
            grafana:
                defaultDashboardsEnabled: true
                enabled: false
                forceDeployDashboards: true
            kubeApiServer:
                enabled: true
            kubeControllerManager:
                enabled: true
            kubeDns:
                enabled: false
            kubeEtcd:
                enabled: true
            kubeProxy:
                enabled: false
            kubeScheduler:
                enabled: true
            kubeStateMetrics:
                enabled: true
            kubelet:
                enabled: true
            kubernetesServiceMonitors:
                enabled: true
            nodeExporter:
                enabled: true
            prometheus:
                enabled: false
            prometheus-windows-exporter:
                prometheus:
                    monitor:
                        enabled: false
            prometheusOperator:
                enabled: false
            thanosRuler:
                enabled: false
            windowsMonitoring:
                enabled: false
        operator:
            enabled: true
            logLevel: info
            prometheusConfigReloader:
                containerSecurityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                        drop:
                            - ALL
                    enabled: true
                    readOnlyRootFilesystem: false
                    runAsNonRoot: true
                livenessProbe:
                    enabled: true
                    failureThreshold: 6
                    initialDelaySeconds: 10
                    periodSeconds: 10
                    successThreshold: 1
                    timeoutSeconds: 5
                readinessProbe:
                    enabled: true
                    failureThreshold: 6
                    initialDelaySeconds: 15
                    periodSeconds: 20
                    successThreshold: 1
                    timeoutSeconds: 5
            serviceMonitor:
                enabled: false
                interval: ""
        podOptions:
            automountServiceAccountToken: true
        probes:
            liveness:
                custom: true
                spec:
                    httpGet:
                        path: /metrics
                        port: promop
                        scheme: HTTP
            readiness:
                custom: true
                spec:
                    httpGet:
                        path: /metrics
                        port: promop
                        scheme: HTTP
            startup:
                custom: true
                spec:
                    httpGet:
                        path: /metrics
                        port: promop
                        scheme: HTTP
        prometheus:
            additionalAlertRelabelConfigsExternal:
                enabled: false
                key: ""
                name: ""
            additionalScrapeConfigs:
                enabled: false
                external:
                    key: ""
                    name: ""
                internal: {}
                type: external
            additionalScrapeConfigsExternal:
                enabled: false
                key: ""
                name: ""
            containerSecurityContext:
                allowPrivilegeEscalation: false
                capabilities:
                    drop:
                        - ALL
                enabled: true
                readOnlyRootFilesystem: false
                runAsNonRoot: true
            disableCompaction: false
            enableAdminAPI: false
            enableRemoteWriteReceiver: false
            enabled: true
            evaluationInterval: 30s
            externalUrl: ""
            listenLocal: false
            livenessProbe:
                enabled: true
                failureThreshold: 10
                initialDelaySeconds: 0
                path: /-/healthy
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 3
            logFormat: logfmt
            logLevel: info
            nodeAffinityPreset:
                key: ""
                type: ""
            paused: false
            persistence:
                accessModes:
                    - ReadWriteOnce
                enabled: true
                size: 999Gi
                storageClass: ""
            podAffinityPreset: ""
            podAntiAffinityPreset: soft
            podMetadata: {}
            podSecurityContext:
                enabled: true
                fsGroup: 1001
                runAsUser: 1001
            portName: main
            priorityClassName: ""
            prometheusExternalLabelName: ""
            prometheusExternalLabelNameClear: false
            readinessProbe:
                enabled: true
                failureThreshold: 10
                initialDelaySeconds: 0
                path: /-/ready
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 3
            replicaCount: 1
            replicaExternalLabelName: ""
            replicaExternalLabelNameClear: false
            retention: 31d
            retentionSize: ""
            routePrefix: /
            scrapeInterval: 15s
            serviceAccount:
                create: true
                name: ""
            serviceMonitor:
                enabled: true
                interval: ""
            thanos:
                containerSecurityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                        drop:
                            - ALL
                    enabled: true
                    readOnlyRootFilesystem: false
                    runAsNonRoot: true
                create: false
                livenessProbe:
                    enabled: true
                    failureThreshold: 120
                    initialDelaySeconds: 0
                    path: /-/healthy
                    periodSeconds: 5
                    successThreshold: 1
                    timeoutSeconds: 3
                prometheusUrl: ""
                readinessProbe:
                    enabled: true
                    failureThreshold: 120
                    initialDelaySeconds: 0
                    path: /-/ready
                    periodSeconds: 5
                    successThreshold: 1
                    timeoutSeconds: 3
                resources: {}
                service:
                    clusterIP: None
                    loadBalancerIP: ""
                    nodePort: ""
                    port: 10901
                    type: ClusterIP
            walCompression: false
        rbac:
            main:
                clusterWide: true
                enabled: true
                primary: true
                rules:
                    - apiGroups:
                        - apiextensions.k8s.io
                      resources:
                        - customresourcedefinitions
                      verbs:
                        - create
                    - apiGroups:
                        - apiextensions.k8s.io
                      resourceNames:
                        - alertmanagers.monitoring.coreos.com
                        - podmonitors.monitoring.coreos.com
                        - prometheuses.monitoring.coreos.com
                        - prometheusrules.monitoring.coreos.com
                        - servicemonitors.monitoring.coreos.com
                        - thanosrulers.monitoring.coreos.com
                        - probes.monitoring.coreos.com
                      resources:
                        - customresourcedefinitions
                      verbs:
                        - get
                        - update
                    - apiGroups:
                        - monitoring.coreos.com
                      resources:
                        - alertmanagers
                        - alertmanagers/finalizers
                        - alertmanagerconfigs
                        - prometheuses
                        - prometheuses/finalizers
                        - thanosrulers
                        - thanosrulers/finalizers
                        - servicemonitors
                        - podmonitors
                        - probes
                        - prometheusrules
                      verbs:
                        - '*'
                    - apiGroups:
                        - apps
                      resources:
                        - statefulsets
                      verbs:
                        - '*'
                    - apiGroups:
                        - ""
                      resources:
                        - configmaps
                        - secrets
                      verbs:
                        - '*'
                    - apiGroups:
                        - ""
                      resources:
                        - pods
                      verbs:
                        - list
                        - delete
                    - apiGroups:
                        - ""
                      resources:
                        - services
                        - services/finalizers
                        - endpoints
                      verbs:
                        - get
                        - create
                        - update
                        - delete
                    - apiGroups:
                        - ""
                      resources:
                        - nodes
                      verbs:
                        - list
                        - watch
                    - apiGroups:
                        - ""
                      resources:
                        - namespaces
                      verbs:
                        - get
                        - list
                        - watch
                    - apiGroups:
                        - networking.k8s.io
                      resources:
                        - ingresses
                      verbs:
                        - get
                        - list
                        - watch
        release_name: prometheus
        securityContext:
            readOnlyRootFilesystem: false
        service:
            alertmanager:
                enabled: true
                ports:
                    alertmanager:
                        enabled: true
                        port: 9093
                        protocol: http
                        targetPort: 9093
                selectorLabels:
                    alertmanager: '{{ template "kube-prometheus.alertmanager.fullname" . }}'
                    app.kubernetes.io/name: alertmanager
                type: ClusterIP
            main:
                enabled: true
                ports:
                    main:
                        port: 9090
                        protocol: http
                        targetPort: 9090
                selectorLabels:
                    app.kubernetes.io/name: prometheus
                    prometheus: '{{ template "kube-prometheus.prometheus.fullname" . }}'
                type: ClusterIP
            thanos:
                enabled: true
                ports:
                    thanos:
                        enabled: true
                        port: 10901
                        protocol: http
                        targetPort: 10901
                selectorLabels:
                    app.kubernetes.io/name: prometheus
                    prometheus: '{{ template "kube-prometheus.prometheus.fullname" . }}'
        serviceAccount:
            main:
                enabled: true
                primary: true
        thanosImage:
            repository: quay.io/thanos/thanos
            tag: v0.35.0@sha256:fa1d28718df00b68d6ad85d7c7d4703bd9f59e5cd8be8da6540ea398cf701a1f
        workload:
            main:
                enabled: false
                podSpec:
                    containers:
                        main:
                            enabled: false
                            probes:
                                liveness:
                                    enabled: false
                                readiness:
                                    enabled: false
                                startup:
                                    enabled: false
