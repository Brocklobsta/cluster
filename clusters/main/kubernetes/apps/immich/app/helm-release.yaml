apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: immich
    namespace: immich
spec:
    interval: 15m
    chart:
        spec:
            chart: immich
            version: 15.13.9
            sourceRef:
                kind: HelmRepository
                name: truecharts
                namespace: flux-system
    releaseName: immich
    values:
        TZ: America/Los_Angeles
        addons:
            codeserver:
                enabled: false
            netshoot:
                enabled: false
            vpn:
                type: disabled
        cnpg:
            main:
                backups:
                    credentials: b2
                    enabled: true
                    retentionPolicy: ""
                    revision: "2"
                cluster:
                    initdb:
                        postInitApplicationSQL:
                            - CREATE EXTENSION IF NOT EXISTS cube;
                            - CREATE EXTENSION IF NOT EXISTS earthdistance;
                            - CREATE SCHEMA IF NOT EXISTS vectors;
                            - ALTER DATABASE immich SET search_path TO "immich", public, vectors;
                            - SET search_path TO "immich", public, vectors;
                            - GRANT SELECT ON TABLE pg_vector_index_stat TO PUBLIC;
                            - ALTER SCHEMA vectors OWNER TO immich;
                    instances: 1
                    singleNode: true
                database: immich
                enabled: true
                hibernate: false
                mode: recovery
                monitoring:
                    disableDefaultQueries: false
                    enablePodMonitor: true
                password: ${CNPG_PASSWORD}
                pgVersion: 16
                pooler:
                    enabled: false
                recovery:
                    credentials: b2
                    enabled: true
                    revision: "1"
                    serverName: ""
                type: vectors
                user: immich
        credentials:
            b2:
                accessKey: ${S3_KEY_ID}
                bucket: ${S3_BUCKET}
                encrKey: ${S3_PASSWORD}
                name: b2
                path: ""
                secretKey: ${S3_SECRET_KEY}
                type: s3
                url: ${S3_ENDPOINT}
        immich:
            enable_ml: true
            enable_typesense: true
            log_level: log
            mlImageType: mlImage
        ingress:
            main:
                enabled: true
                hosts:
                    - host: pics.${DOMAIN_0}
                      paths:
                        - path: /
                          pathType: Prefix
                ingressClassName: ""
                integrations:
                    certManager:
                        certificateIssuer: cert
                        enabled: true
                    homepage:
                        description: ""
                        enabled: true
                        group: Apps
                        icon: ""
                        name: ""
                        widget:
                            custom:
                                key: ""
                            enabled: false
                    traefik:
                        allowCors: false
                        enabled: true
                        entrypoints:
                            - websecure
        mlCudaImage:
            pullPolicy: IfNotPresent
            repository: altran1502/immich-machine-learning
            tag: v1.105.1-cuda@sha256:6c34f6cfc85b1a34336e8eb2cf5ce14ec585395e404d4566826e8bf16e1a441b
        mlImage:
            pullPolicy: IfNotPresent
            repository: altran1502/immich-machine-learning
            tag: v1.105.1@sha256:2e2736ba2f2270485c0b6fa33eee66ea0b2279b70b92ea838a015c4d5289c9f0
        mlOpenvinoImage:
            pullPolicy: IfNotPresent
            repository: altran1502/immich-machine-learning
            tag: v1.105.1-openvino@sha256:7675497197b8600316d942444fb9f88106a91091b5011a806988a4afad0dc0cb
        persistence:
            library:
                autoPermissions:
                    enabled: false
                enabled: true
                mountPath: /usr/src/app/upload/library
                path: /mnt/Redwood/immich
                readOnly: false
                server: ${TRUENAS_IP}
                targetSelector:
                    main: {}
                    microservices: {}
                type: nfs
            microcache:
                enabled: true
                targetSelector:
                    microservices:
                        microservices:
                            mountPath: /microcache
                type: emptyDir
            mlcache:
                enabled: true
                targetSelector:
                    machinelearning:
                        machinelearning:
                            mountPath: /mlcache
                type: emptyDir
            profile:
                enabled: true
                mountPath: /usr/src/app/upload/profile
                readOnly: false
                storageClass: ""
                targetSelector:
                    main: {}
                    microservices: {}
                volsync:
                    - credentials: b2
                      dest:
                        enabled: true
                      name: profiles
                      src:
                        enabled: true
                      type: restic
            thumbs:
                enabled: true
                mountPath: /usr/src/app/upload/thumbs
                readOnly: false
                storageClass: ""
                targetSelector:
                    main: {}
                    microservices: {}
                volsync:
                    - credentials: b2
                      dest:
                        enabled: true
                      name: thumbnails
                      src:
                        enabled: true
                      type: restic
            uploads:
                enabled: true
                mountPath: /usr/src/app/upload/upload
                readOnly: false
                storageClass: ""
                targetSelector:
                    main: {}
                    microservices: {}
                volsync:
                    - credentials: b2
                      dest:
                        enabled: true
                      name: uploads
                      src:
                        enabled: true
                      type: restic
            video:
                enabled: true
                mountPath: /usr/src/app/upload/encoded-video
                readOnly: false
                storageClass: ""
                targetSelector:
                    main: {}
                    microservices: {}
                volsync:
                    - credentials: b2
                      dest:
                        enabled: true
                      name: encoded-videio
                      src:
                        enabled: true
                      type: restic
        redis:
            enabled: true
            includeCommon: true
            redisUsername: default
        release_name: immich
        resources: {}
        securityContext:
            container:
                UMASK: "0022"
                readOnlyRootFilesystem: false
                runAsGroup: 0
                runAsNonRoot: false
                runAsUser: 0
            pod:
                fsGroupChangePolicy: OnRootMismatch
        service:
            machinelearning:
                enabled: true
                ports:
                    machinelearning:
                        enabled: true
                        port: 10003
                        primary: true
                        protocol: http
                        targetSelector: machinelearning
                targetSelector: machinelearning
                type: ClusterIP
            main:
                enabled: true
                ports:
                    main:
                        port: 10323
                        protocol: http
                        targetSelector: main
                targetSelector: main
                type: ClusterIP
            microservices:
                enabled: true
                ports:
                    microservices:
                        enabled: true
                        port: 10004
                        primary: true
                        protocol: http
                        targetSelector: microservices
                targetSelector: microservices
                type: ClusterIP
        workload:
            main:
                podSpec:
                    containers:
                        main: {}
                replicas: 1
                type: Deployment
