apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: home-assistant
    namespace: home-assistant
spec:
    interval: 15m
    chart:
        spec:
            chart: home-assistant
            version: 26.11.0
            sourceRef:
                kind: HelmRepository
                name: truecharts
                namespace: flux-system
            interval: 15m
    timeout: 20m
    maxHistory: 3
    driftDetection:
        mode: warn
    install:
        createNamespace: true
        remediation:
            retries: 3
    upgrade:
        cleanupOnFail: true
        remediation:
            retries: 3
    uninstall:
        keepHistory: false
    values:
        global:
            stopAll: false
        broadcastProxyImage:
            repository: docker.io/alpine/socat
            pullPolicy: IfNotPresent
            tag: 1.8.0.0@sha256:a6be4c0262b339c53ddad723cdd178a1a13271e1137c65e27f90a08c16de02b8
        TZ: America/Los_Angeles
        cnpg:
            main:
                backups:
                    credentials: b2
                    enabled: true
                    retentionPolicy: ""
                    revision: "4"
                cluster:
                    instances: 1
                    singleNode: true
                mode: recovery
                password: ${CNPG_PASSWORD}
                pgVersion: 15
                recovery:
                    credentials: b2
                    enabled: true
                    revision: "3"
                    serverName: ""
                user: home-assistant
        credentials:
            b2:
                accessKey: ${S3_KEY_ID}
                bucket: ${S3_BUCKET}
                encrKey: ${S3_PASSWORD}
                name: b2
                path: ""
                secretKey: ${S3_SECRET_KEY}
                type: s3
                url: ${S3_ENDPOINT}
        ingress:
            main:
                enabled: true
                hosts:
                    - host: home.${DOMAIN_0}
                      paths:
                        - path: /
                          pathType: Prefix
                integrations:
                    certManager:
                        certificateIssuer: domain-0-le-prod
                        enabled: true
                    homepage:
                        description: ""
                        enabled: true
                        group: Apps
                        icon: ""
                        name: ""
                        widget:
                            custom:
                                key: ""
                            enabled: false
                    traefik:
                        allowCors: false
                        enabled: true
                        entrypoints:
                            - websecure
        persistence:
            config:
                enabled: true
                mountPath: /config
                readOnly: false
                targetSelectAll: false
                volsync:
                    - credentials: b2
                      dest:
                        enabled: true
                      name: config
                      src:
                        enabled: true
                      type: restic
            zigbee:
                enabled: true
                type: device
                mountPath: /dev/ttyUSB0
                hostPath: /dev/ttyUSB0
        service:
            weatherflow:
                enabled: true
                ports:
                    weatherflow:
                        enabled: true
                        protocol: udp
                        port: 50222
                        targetPort: 50222
        workload:
            main:
                podSpec:
                    nodeSelector:
                        zigbee: "true"
            broadcastproxy:
                enabled: true
                type: Deployment
                podSpec:
                    hostNetwork: true
                    terminationGracePeriodSeconds: 3
                    containers:
                        broadcastproxy:
                            enabled: true
                            primary: true
                            imageSelector: broadcastProxyImage
                            securityContext:
                                readOnlyRootFilesystem: true
                            command: ["/bin/sh"]
                            args:
                                - "-c"
                                - 'export TARGET_IP=$(getent hosts ''{{ printf "%v-weatherflow" (include "tc.v1.common.lib.chart.names.fullname" $) }}'' | awk ''{ print $1 }'') && [[ ! -z $TARGET_IP ]] && touch /tmp/healthy && socat UDP4-LISTEN:50222,fork,reuseaddr,rcvbuf=8096 UDP4-SENDTO:${TARGET_IP}:50222,rcvbuf=8096 ; rm -rf /tmp/healthy'
                            probes:
                                readiness:
                                    enabled: true
                                    type: exec
                                    command:
                                        - cat
                                        - /tmp/healthy
                                liveness:
                                    enabled: true
                                    type: exec
                                    command:
                                        - cat
                                        - /tmp/healthy
                                startup:
                                    enabled: true
                                    type: exec
                                    command:
                                        - cat
                                        - /tmp/healthy
        weatherflow:
            enabled: true
