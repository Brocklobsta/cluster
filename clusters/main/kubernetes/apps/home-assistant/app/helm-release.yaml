apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: home-assistant
    namespace: home-assistant
spec:
    interval: 15m
    chart:
        spec:
            chart: home-assistant
            version: 26.8.4
            sourceRef:
                kind: HelmRepository
                name: truecharts
                namespace: flux-system
    releaseName: home-assistant
    values:
        TZ: America/Los_Angeles
        addons:
            codeserver:
                enabled: false
            netshoot:
                enabled: false
            vpn:
                type: disabled
        cnpg:
            main:
                backups:
                    credentials: b2
                    enabled: true
                    retentionPolicy: ""
                    revision: "2"
                cluster:
                    instances: 1
                    singleNode: true
                database: home-assistant
                enabled: true
                hibernate: false
                mode: recovery
                monitoring:
                    disableDefaultQueries: false
                    enablePodMonitor: true
                password: ${CNPG_PASSWORD}
                pgVersion: 15
                pooler:
                    enabled: false
                recovery:
                    credentials: b2
                    enabled: true
                    revision: "1"
                    serverName: ""
                user: home-assistant
        credentials:
            b2:
                accessKey: ${S3_KEY_ID}
                bucket: ${S3_BUCKET}
                encrKey: ${S3_PASSWORD}
                name: b2
                path: ""
                secretKey: ${S3_SECRET_KEY}
                type: s3
                url: ${S3_ENDPOINT}
        ingress:
            main:
                enabled: true
                hosts:
                    - host: home.${DOMAIN_0}
                      paths:
                        - path: /
                          pathType: Prefix
                ingressClassName: ""
                integrations:
                    certManager:
                        certificateIssuer: cert
                        enabled: true
                    homepage:
                        description: ""
                        enabled: true
                        group: Apps
                        icon: ""
                        name: ""
                        widget:
                            custom:
                                key: ""
                            enabled: false
                    traefik:
                        allowCors: false
                        enabled: true
                        entrypoints:
                            - websecure
        persistence:
            config:
                enabled: true
                mountPath: /config
                readOnly: false
                storageClass: ""
                targetSelectAll: true
                volsync:
                    - credentials: b2
                      dest:
                        enabled: true
                      name: config
                      src:
                        enabled: true
                      type: restic
            zigbee:
                enabled: true
                type: device
                mountPath: /dev/ttyUSB0
                hostPath: /dev/ttyUSB0
        prometheus:
            serviceMonitor:
                enabled: false
        release_name: home-assistant
        resources: {}
        # broadcastProxyImage:
        #     repository: docker.io/alpine/socat
        #     pullPolicy: IfNotPresent
        #     tag: 1.8.0.0@sha256:a6be4c0262b339c53ddad723cdd178a1a13271e1137c65e27f90a08c16de02b8
        service:
            main:
                enabled: true
                loadBalancerIP: ""
                ports:
                    main:
                        port: 8123
                        targetPort: 8123
                    # weatherflow:
                    #     port: 50222
                    #     targetPort: 50222
                    #     protocol: udp
                    #     enabled: true
                type: LoadBalancer
            # weatherflow:
            #     enabled: true
            #     ports:
            #         weatherflow:
            #             port: 50222
            #             targetPort: 50222
            #             protocol: udp
            #             enabled: true
        workload:
            main:
                podSpec:
                    containers:
                        main: {}
                    initContainers:
                        init:
                            command: /config/init/init.sh
                            enabled: true
                            imageSelector: yqImage
                            type: init
                replicas: 1
                type: Deployment
            # broadcastproxy:
            #     enabled: true
            #     type: DaemonSet
            #     podSpec:
            #         hostNetwork: true
            #         # Proxy doesn't seem to respect the TERM signal, so by default
            #         # this ends up just hanging until the default grace period ends.
            #         # This is unnecesary since this workload only proxies weatherflow
            #         # messages.
            #         terminationGracePeriodSeconds: 3
            #         containers:
            #             broadcastproxy:
            #                 enabled: true
            #                 primary: true
            #                 imageSelector: broadcastProxyImage
            #                 securityContext:
            #                     readOnlyRootFilesystem: true
            #                 command: ["/bin/sh"]
            #                 # Quite a lot going on here:
            #                 # - Resolve home-assistant's weatherflow service IP from its FQDN via getent hosts
            #                 # - Export the IP to `$TARGET_IP`
            #                 # - Check `$TARGET_IP` is not empty (so we can crash if it is - will help to detect templating errors)
            #                 # - Touch `/tmp/healty` to use with the readiness, liveness and startup probes
            #                 # - Start socat in proxy mode
            #                 # - On exit remove `/tmp/healthy`
            #                 args:
            #                     - "-c"
            #                     - 'export TARGET_IP=$(getent hosts ''{{ printf "%v-weatherflow" (include "tc.v1.common.lib.chart.names.fullname" $) }}'' | awk ''{ print $1 }'') && [[ ! -z $TARGET_IP ]] && touch /tmp/healthy && socat UDP4-LISTEN:50222,fork,reuseaddr,rcvbuf=8096 UDP4-SENDTO:${TARGET_IP}:50222,rcvbuf=8096 ; rm -rf /tmp/healthy'
            #                     # - 'touch /tmp/healthy'
            #                 probes:
            #                     readiness:
            #                         enabled: true
            #                         type: exec
            #                         command:
            #                             - cat
            #                             - /tmp/healthy
            #                     liveness:
            #                         enabled: true
            #                         type: exec
            #                         command:
            #                             - cat
            #                             - /tmp/healthy
            #                     startup:
            #                         enabled: true
            #                         type: exec
            #                         command:
            #                             - cat
            #                             - /tmp/healthy
